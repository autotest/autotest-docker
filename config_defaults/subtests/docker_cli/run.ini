[docker_cli/run]
subsubtests = run_true,run_false,run_interactive,run_attach_stdout,run_remote_tag,run_names,run_tmpfs,run_passwd
#: The most basic sub-subtests can be generated from a generic
#: class at runtime, set 'yes' to enable this feature.
generate_generic = no
#: CSV of options and arguments to use on docker command line,
#: with the exception of --name, image, and contained command.
run_options_csv = --rm
#: Set 'yes' to append ``--name`` with a test-specific random name.
run_append_name = yes
#: CSV docker run COMMAND argument to prefix ``cmd`` option (below)
bash_cmd = /bin/bash,-c
#: Suffix to append to ``bash_cmd`` option (above), careful quoting
#: is highly recommended.
cmd =
#: expected exit status from docker run operation
exit_status = 0

[docker_cli/run/run_true]
generate_generic = yes
cmd = /bin/true

[docker_cli/run/run_false]
generate_generic = yes
cmd = /bin/false
exit_status = 1

[docker_cli/run/run_passwd]
generate_generic = yes
#: String to search for with ``grep`` (see ``cmd`` option value)
expected_status = "Password set"
cmd = 'passwd --status root | grep -qv %(expected_status)s'

[docker_cli/run/run_names]
cmd = sleep 2s
# Test will find container by CID instead of name, CID must appear
# on stdout.
run_options_csv = --detach
run_append_name = no
#: Set to 'yes' if the last generated ``--name`` is used by docker, or
#: 'no' if the first.  Affects test pass/fail.
last_name_sticks = yes
#: The number of ``--name`` options to generate for the command line.
names_count = 1000

[docker_cli/run/run_tmpfs]
#: --tmpfs parameter
tmpfs_path = /run
run_options_csv = --tmpfs,%(tmpfs_path)s
cmd = 'findmnt -n -t tmpfs %(tmpfs_path)s'

[docker_cli/run/run_interactive]
run_options_csv = --interactive,--rm
bash_cmd = cat
#: Unique string used to verify output from container
secret_sauce = gfjfif8HHYnmn!!

[docker_cli/run/run_attach_stdout]
run_options_csv = --detach=true
#: Unique string used to verify output from container
secret_sauce = 4c93bb78d98f
# Assumes 'docker attach' never takes longer than sleep to execute.
# Yes it's ugly / crude, but it's simple and works in all but most
# heavily loaded cases.
cmd = 'sleep 5s && echo "%(secret_sauce)s"'

[docker_cli/run/run_remote_tag]
#: Change this to an image remotely available within test environment
__example__ = remote_image_fqin
#: Fully qualified image name stored on a remote registry, not local.
remote_image_fqin = docker.io/stackbrew/centos:latest
run_options_csv =
cmd = /bin/true

[docker_cli/run/run_install]
__example__ = install_cmd,verify_cmd
#: Full command to execute which installs something inside the container
install_cmd = yum install --assumeyes yajl
#: Full command to run in commited container to verify installation
verify_cmd = bash -c "echo '[{}]' | json_verify -q"

[docker_cli/run/run_update]
__example__ = cmd
generate_generic = yes
cmd = 'yum --assumeyes update'
