[docker_cli/kill_stress]
docker_timeout = 60
#: modifies the ``docker run`` options
run_options_csv = --attach=stdout
subsubtests = stress_ttyoff,run_sigproxy_stress_ttyoff,attach_sigproxy_stress_ttyoff
#: which signals should not be used (uncatchable signals)
skip_signals = 9 13 17 18 19 20 27
#: checking output produced by signal
check_stdout = Received %%s, ignoring...
#: range of used signals
kill_signals = 1 31
#: how many iterations
no_iterations = 100
#: map signal numbers to names (RANDOM,true,false)
kill_map_signals = false
#: maximal acceptable delay caused by stress command
stress_cmd_timeout = 5
#: modifies the container command
exec_cmd = 'for NUM in `seq 1 64`; do trap "echo Received $NUM, ignoring..." $NUM; done; echo READY; while :; do sleep 0.1; done'
#: allows you to force given sequence of signals
signals_sequence =
#: used kill command (``false`` -> ``docker kill $name``;
#: `true`` -> ``os.kill $docker_cmd.pid``
kill_sigproxy =
#: execute detacched container and attach it in separate process
run_container_attached = false
#: Extra arguments to use when re-attaching to test container
attach_options_csv =

[docker_cli/kill_stress/stress_ttyoff]

[docker_cli/kill_stress/run_sigproxy_stress_ttyoff]
kill_sigproxy = true
run_container_attached = true
run_options_csv = --detach=true,--sig-proxy=true
attach_options_csv = --sig-proxy=true

[docker_cli/kill_stress/attach_sigproxy_stress_ttyoff]
kill_sigproxy = true
run_container_attached = true
run_options_csv = --detach=true,--sig-proxy=true
attach_options_csv = --sig-proxy=true
